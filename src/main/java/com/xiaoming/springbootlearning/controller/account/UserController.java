package com.xiaoming.springbootlearning.controller.account;

import com.xiaoming.springbootlearning.domain.User;
import com.xiaoming.springbootlearning.repository.UserRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

/**
 * @author Xiaoming.
 * Created on 2018/11/22 11:40.
 * Description :
 */
@RestController
public class UserController {
    @Autowired // This means to get the bean called userRepository. Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    private static final Logger LOGGER = LoggerFactory.getLogger(UserController.class);

    //@PostMapping(path = "/signup")
    @RequestMapping(path = "/signup", method = {RequestMethod.GET, RequestMethod.POST})
    public User signUp(@RequestParam(value = "username") String name, @RequestParam(value = "password") String psw, @RequestParam(value = "email") String email) {
        User u = new User();
        u.setUsername(name);
        u.setPassword(psw);
        u.setEmail(email);
        userRepository.save(u);

        LOGGER.info(u.toString() + "[sign up]");

        return u;
    }

    @PostMapping(path = "/signin")
    @RequestMapping(path = "/signin")
    public ResponseEntity<User> signIn(@RequestParam(value = "username") String name, @RequestParam(value = "password") String psw) {
        User result = userRepository.findUserByUsernameAndPassword(name, psw);
        HttpStatus status = result == null ? HttpStatus.NOT_FOUND : HttpStatus.OK;

        //System.out.println(name + " " + psw);

        LOGGER.info((result == null ? name : result.toString()) + "[sign in]");

        return new ResponseEntity<User>(result, status);
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }


}
