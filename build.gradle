buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.xiaoming'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.springframework.boot:spring-boot-starter-cache')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    
    /*implementation('org.springframework.boot:spring-boot-starter-security')
    implementation("org.springframework.ldap:spring-ldap-core")
    implementation("org.springframework.security:spring-security-ldap")
    implementation("org.springframework:spring-tx")
    implementation("com.unboundid:unboundid-ldapsdk")*/
//    implementation('org.springframework.boot:spring-boot-starter-validation')
    
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
    
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    //implementation('org.springframework.session:spring-session-jdbc')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    
    runtimeOnly('mysql:mysql-connector-java')
    
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')

    //implementation('com.google.code.gson:gson:2.8.5')
    implementation('com.alibaba:fastjson:1.2.56')
}
